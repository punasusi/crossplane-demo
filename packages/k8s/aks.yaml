apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: cluster-azure
  labels:
    provider: azure
    cluster: aks
spec:
  compositeTypeRef:
    apiVersion: punasusi.com/v1alpha1
    kind: CompositeCluster
  writeConnectionSecretsToNamespace: crossplane-system
  patchSets:
  - name: metadata
    patches:
    - fromFieldPath: metadata.labels
  resources:
  - name: aks
    base:
      apiVersion: containerservice.azure.jet.crossplane.io/v1alpha2
      kind: KubernetesCluster
      spec:
        forProvider:
          resourceGroupName: crossplane-demo
          location: eastus
          dnsPrefix: punasusi
          kubernetesVersion: "1.23.8"
          defaultNodePool:
          - maxCount: 10
            enableAutoScaling: true
            vmSize: Standard_D2_v2
          identity:
            - type: SystemAssigned
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.name
    - fromFieldPath: spec.id
      toFieldPath: spec.writeConnectionSecretToRef.name
      transforms:
        - type: string
          string:
            fmt: "%s-cluster"
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.defaultNodePool[0].name
    - fromFieldPath: spec.resourcegroupname
      toFieldPath: spec.forProvider.resourceGroupName
    - fromFieldPath: spec.parameters.version
      toFieldPath: spec.forProvider.kubernetesVersion
    - fromFieldPath: spec.parameters.minNodeCount
      toFieldPath: spec.forProvider.defaultNodePool[0].minCount
    - fromFieldPath: spec.parameters.nodeSize
      toFieldPath: spec.forProvider.defaultNodePool[0].vmSize
      transforms:
      - type: map
        map:
          small: Standard_D2_v2
          medium: Standard_D4_v2
          large: Standard_D16_v3
    - type: ToCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: status.clusterName
    # - type: ToCompositeFieldPath
    #   fromFieldPath: status.conditions[0].status
    #   toFieldPath: status.controlPlaneStatus
    # - type: ToCompositeFieldPath
    #   fromFieldPath: status.conditions[0].status
    #   toFieldPath: status.nodePoolStatus
    - fromFieldPath: spec.writeConnectionSecretToRef.namespace
      toFieldPath: spec.writeConnectionSecretToRef.namespace
    readinessChecks:
    - type: MatchString
      fieldPath: status.conditions.status
      matchString: Succeeded
    connectionDetails:
      - fromConnectionSecretKey: kubeconfig
  - name: helm
    base:
      apiVersion: helm.crossplane.io/v1beta1
      kind: ProviderConfig
      spec:
        credentials:
          source: Secret
          secretRef:
            key: attribute.kube_config_raw
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
    - fromFieldPath: spec.writeConnectionSecretToRef.namespace
      toFieldPath: spec.credentials.secretRef.namespace
    - fromFieldPath: spec.id
      toFieldPath: spec.credentials.secretRef.name
      transforms:
        - type: string
          string:
            fmt: "%s-cluster"
    readinessChecks:
      - type: None
  - name: crossplane
    base:
      apiVersion: helm.crossplane.io/v1beta1
      kind: Release
      spec:
        rollbackLimit: 3
        forProvider:
          namespace: crossplane-system
          chart:
            name: crossplane
            repository: https://charts.crossplane.io/stable
            version: "1.5.0"
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
        - type: string
          string:
            fmt: "%s-crossplane"
    - fromFieldPath: spec.id
      toFieldPath: spec.providerConfigRef.name
  - name: prometheus
    base:
      apiVersion: helm.crossplane.io/v1beta1
      kind: Release
      spec:
        rollbackLimit: 3
        forProvider:
          namespace: prometheus
          chart:
            name: prometheus
            repository: https://prometheus-community.github.io/helm-charts
            version: "14.9.2"
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
        - type: string
          string:
            fmt: "%s-prometheus"
    - fromFieldPath: spec.id
      toFieldPath: spec.providerConfigRef.name
  - name: kubernetes
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: ProviderConfig
      spec:
        credentials:
          source: Secret
          secretRef:
            key: attribute.kube_config_raw
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
    - fromFieldPath: spec.writeConnectionSecretToRef.namespace
      toFieldPath: spec.credentials.secretRef.namespace
    - fromFieldPath: spec.id
      toFieldPath: spec.credentials.secretRef.name
      transforms:
        - type: string
          string:
            fmt: "%s-cluster"
    readinessChecks:
      - type: None
  - name: ns-prod
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: production
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
        - type: string
          string:
            fmt: "%s-ns-prod"
    - fromFieldPath: spec.id
      toFieldPath: spec.providerConfigRef.name
  - name: k8s-provider-sa
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              name: provider-kubernetes
              namespace: crossplane-system
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
        - type: string
          string:
            fmt: "%s-k8s-provider-sa"
    - fromFieldPath: spec.id
      toFieldPath: spec.providerConfigRef.name
  - name: k8s-provider-crd
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRoleBinding
            metadata:
              name: provider-kubernetes
            subjects:
            - kind: ServiceAccount
              name: provider-kubernetes
              namespace: crossplane-system
            roleRef:
              kind: ClusterRole
              name: cluster-admin
              apiGroup: rbac.authorization.k8s.io
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
        - type: string
          string:
            fmt: "%s-k8s-provider-crb"
    - fromFieldPath: spec.id
      toFieldPath: spec.providerConfigRef.name
  - name: k8s-provider-cc
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: pkg.crossplane.io/v1alpha1
            kind: ControllerConfig
            metadata:
              name: provider-kubernetes
            spec:
              serviceAccountName: provider-kubernetes
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
        - type: string
          string:
            fmt: "%s-k8s-provider-cc"
    - fromFieldPath: spec.id
      toFieldPath: spec.providerConfigRef.name
  - name: k8s-provider
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: pkg.crossplane.io/v1
            kind: Provider
            metadata:
              name: provider-kubernetes
            spec:
              package: crossplane/provider-kubernetes:main
              controllerConfigRef:
                name: provider-kubernetes
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
        - type: string
          string:
            fmt: "%s-k8s-provider"
    - fromFieldPath: spec.id
      toFieldPath: spec.providerConfigRef.name
  - name: config-app
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: pkg.crossplane.io/v1
            kind: Configuration
            metadata:
              name: crossplane-app
            spec:
              package: vfarcic/crossplane-app:v0.1.1
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
        - type: string
          string:
            fmt: "%s-config-app"
    - fromFieldPath: spec.id
      toFieldPath: spec.providerConfigRef.name

